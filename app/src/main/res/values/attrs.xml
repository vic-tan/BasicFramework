<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!-- ——————————————————————————————————————————ActionBarView 自定义类 —————————————————————————————————————————— -->
    <declare-styleable name="ActionBarView">
        <!-- 标题及背影设置 -->
        <attr name="abv_backgroundColor" format="color" /><!--actionbar 背影颜色-->
        <attr name="abv_title_text" format="string" /><!--actionbar 标题-->
        <attr name="abv_title_textColor" format="color" /><!--actionbar 标题颜色-->
        <attr name="abv_title_textSize" format="dimension" /><!--actionbar 标题字体大小 单位 px-->

        <!-- 返回设置 -->
        <attr name="abv_back_text" format="string" /><!--actionbar 返回文字-->
        <attr name="abv_back_textColor" format="color" /><!--actionbar 返回文字颜色-->
        <attr name="abv_back_textSize" format="dimension" /><!--actionbar 返回文字字体大小 单位 px-->
        <attr name="abv_back_text_dimiss" format="boolean" /><!--actionbar 返回文字是否显示-->
        <!--<attr name="abv_back_iconDrawable" format="reference" />&lt;!&ndash;actionbar 返回图标字体大小 单位 px&ndash;&gt;
        <attr name="abv_back_iconDrawableDimiss" format="boolean" />&lt;!&ndash;actionbar 返回图标是否显示 &ndash;&gt;-->
        <attr name="abv_back_dimiss" format="boolean" /><!--actionbar 返回文字和图标是否显示 -->

        <!-- 右边操作view ,提供两个文字view 和两个图片view, 它们在同一LinearLayout 上，顺序从左到右为abv_opt_right_text,abv_opt_left_iconDrawable ,abv_opt_left_text,abv_opt_right_iconDrawable-->
        <attr name="abv_opt_right_text" format="string" /><!--actionbar 操作文字1-->
        <attr name="abv_opt_right_textColor" format="reference" /><!--actionbar 操作文字1颜色-->
        <attr name="abv_opt_right_textSize" format="dimension" /><!--actionbar 操作文字1字体大小 单位 px-->
        <attr name="abv_opt_left_text" format="string" /><!--actionbar 操作文字2-->
        <attr name="abv_opt_left_textColor" format="reference" /><!--actionbar 操作文字2颜色-->
        <attr name="abv_opt_left_textSize" format="dimension" /><!--actionbar 操作文字2字体大小 单位 px -->
        <attr name="abv_opt_right_iconDrawable_normol" format="reference" /><!--actionbar 操作图片1 未选中时显示-->
        <attr name="abv_opt_right_iconDrawable_pressed" format="reference" /><!--actionbar 操作图片1 选中时显示-->
        <attr name="abv_opt_left_iconDrawable_normol" format="reference" /><!--actionbar 操作图片2 未选中时显示-->
        <attr name="abv_opt_left_iconDrawable_pressed" format="reference" /><!--actionbar 操作图片2 选中时显示-->
    </declare-styleable>


    <!-- ——————————————————————————————————————————ExpandableTextView 伸缩—————————————————————————————————————————— -->
    <declare-styleable name="ExpandableTextView">
        <attr name="maxCollapsedLines" format="integer" />
        <attr name="animDuration" format="integer" />
        <attr name="animAlphaStart" format="float" />
        <attr name="expandDrawable" format="reference" />
        <attr name="collapseDrawable" format="reference" />
        <!-- 点击事件的触发方式 -->
        <attr name="clickListenerType">
            <enum name="all" value="0" /> <!-- 点击区域为全部区域,包括TextView和图标 -->
            <enum name="footer" value="1" /><!-- 点击区域仅为图标区域 -->
        </attr>
    </declare-styleable>


    <!-- —————————————————————————————————————————— Round 圆角 View  —————————————————————————————————————————— -->
    <!-- 以下是重用attr的正确姿势,一切为了在布局中可以自动提示--><!-- 圆角矩形背景色 -->
    <declare-styleable name="RoundTextView">
        <attr name="rv_backgroundColor" format="color" /><!-- 圆角矩形背景色press -->
        <attr name="rv_backgroundPressColor" format="color" /><!-- 圆角弧度,单位dp-->
        <attr name="rv_cornerRadius" format="dimension" /><!-- 圆角弧度,单位dp-->
        <attr name="rv_strokeWidth" format="dimension" /><!-- 圆角边框颜色-->
        <attr name="rv_strokeColor" format="color" /><!-- 圆角边框颜色press -->
        <attr name="rv_strokePressColor" format="color" /><!-- 文字颜色press-->
        <attr name="rv_textPressColor" format="color" /><!-- 圆角弧度是高度一半-->
        <attr name="rv_isRadiusHalfHeight" format="boolean" /><!-- 圆角矩形宽高相等,取较宽高中大值-->
        <attr name="rv_isWidthHeightEqual" format="boolean" /><!-- 圆角弧度,单位dp,TopLeft-->
        <attr name="rv_cornerRadius_TL" format="dimension" /><!-- 圆角弧度,单位dp,TopRight-->
        <attr name="rv_cornerRadius_TR" format="dimension" /><!-- 圆角弧度,单位dp,BottomLeft-->
        <attr name="rv_cornerRadius_BL" format="dimension" /><!-- 圆角弧度,单位dp,BottomRight-->
        <attr name="rv_cornerRadius_BR" format="dimension" /><!-- 是否有Ripple效果,api21+有效-->
        <attr name="rv_isRippleEnable" format="boolean" />
    </declare-styleable>


    <!-- ————————————————————————————————————————— 图片控件点击效果 jnjecion （不适合用代码更改图片切换时用）———————————————————————— -->
    <color name="default_color">#00000000</color>
    <declare-styleable name="SelectorInjection">
        <attr name="in_normal_color" format="color" /><!-- 普通状态的颜色 -->
        <attr name="in_pressed_color" format="color" /><!-- 按下后的颜色 -->
        <attr name="in_checked_color" format="color" /><!-- 选中后的颜色 -->
        <attr name="in_normal_drawable" format="reference" /><!-- 常规状态下-->
        <attr name="in_pressed_drawable" format="reference" /><!-- 按下/获得焦点 -->
        <attr name="in_checked_drawable" format="reference" /><!-- 选中时 -->
        <attr name="in_stroke_color" format="color" /><!-- 边界描边的颜色 -->
        <attr name="in_stroke_width" format="dimension" /><!-- 外界描边的宽度 -->
        <attr name="in_pressed_stroke_color" format="color" /><!-- 按下后的描边颜色-->
        <attr name="in_pressed_stroke_width" format="dimension" /><!-- 按下后的描边宽度-->
        <attr name="in_checked_stroke_color" format="color" /><!-- 选中后的描边颜色 -->
        <attr name="in_checked_stroke_width" format="dimension" /><!-- 选中后的描边宽度 -->
        <attr name="in_isSmart" format="boolean" /><!-- 是否是自动计算的 -->
        <attr name="in_isSrc" format="boolean" /> <!-- 是否将图片设置到src中 -->
    </declare-styleable>


    <!-- ——————————————————————————————————————————用LinearLayout实现的ListView，可解决多个ListView并存等问题—————————————————————— -->
    <declare-styleable name="LinearListView">
        <attr name="android:entries" />
        <attr name="dividerThickness" format="dimension" />
    </declare-styleable>



</resources>